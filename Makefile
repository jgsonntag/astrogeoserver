#############################################################################
# Makefile for building: astrogeoserver
# Generated by qmake (1.07a) (Qt 3.3.8b) on: Sun Nov 16 10:55:11 2014
# Project:  astrogeoserver.pro
# Template: app
# Command: $(QMAKE) -o Makefile astrogeoserver.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -g -Wall -W -O2 -D_REENTRANT  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT
CXXFLAGS = -pipe -g -Wall -W -O2 -D_REENTRANT  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/share/qt3/mkspecs/default -I. -I. -I/usr/include/qt3
LINK     = g++
LFLAGS   = 
LIBS     = $(SUBLIBS) -L/usr/share/qt3/lib -L/usr/X11R6/lib -lqt-mt -lXext -lX11 -lm -lpthread
AR       = ar cqs
RANLIB   = 
MOC      = /usr/share/qt3/bin/moc
UIC      = /usr/share/qt3/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ./

####### Files

HEADERS = fsgui.h \
		genericclient.h \
		jpl_int.h \
		jpleph.h \
		querytopo.h \
		setupgui.h \
		sunangle.h \
		utility.h
SOURCES = fsgui.cpp \
		genericclient.cpp \
		jpleph.cpp \
		main.cpp \
		querytopo.cpp \
		setupgui.cpp \
		sunangle.cpp \
		utility.cpp
OBJECTS = fsgui.o \
		genericclient.o \
		jpleph.o \
		main.o \
		querytopo.o \
		setupgui.o \
		sunangle.o \
		utility.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = moc_fsgui.cpp \
		moc_genericclient.cpp \
		moc_setupgui.cpp
OBJMOC = moc_fsgui.o \
		moc_genericclient.o \
		moc_setupgui.o
DIST	   = astrogeoserver.pro
QMAKE_TARGET = astrogeoserver
DESTDIR  = 
TARGET   = astrogeoserver

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: astrogeoserver.pro  /usr/share/qt3/mkspecs/default/qmake.conf /usr/share/qt3/lib/libqt-mt.prl
	$(QMAKE) -o Makefile astrogeoserver.pro
qmake: 
	@$(QMAKE) -o Makefile astrogeoserver.pro

dist: 
	@mkdir -p .tmp/astrogeoserver && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .tmp/astrogeoserver/ && ( cd `dirname .tmp/astrogeoserver` && $(TAR) astrogeoserver.tar astrogeoserver && $(GZIP) astrogeoserver.tar ) && $(MOVE) `dirname .tmp/astrogeoserver`/astrogeoserver.tar.gz . && $(DEL_FILE) -r .tmp/astrogeoserver

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:

yaccclean:
lexclean:
clean: mocclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

fsgui.o: fsgui.cpp fsgui.h \
		setupgui.h \
		genericclient.h \
		utility.h \
		querytopo.h

genericclient.o: genericclient.cpp genericclient.h

jpleph.o: jpleph.cpp jpleph.h \
		jpl_int.h

main.o: main.cpp fsgui.h \
		genericclient.h \
		utility.h \
		querytopo.h

querytopo.o: querytopo.cpp querytopo.h

setupgui.o: setupgui.cpp setupgui.h

sunangle.o: sunangle.cpp sunangle.h \
		jpleph.h

utility.o: utility.cpp utility.h

moc_fsgui.o: moc_fsgui.cpp  fsgui.h genericclient.h \
		utility.h \
		querytopo.h

moc_genericclient.o: moc_genericclient.cpp  genericclient.h 

moc_setupgui.o: moc_setupgui.cpp  setupgui.h 

moc_fsgui.cpp: $(MOC) fsgui.h
	$(MOC) fsgui.h -o moc_fsgui.cpp

moc_genericclient.cpp: $(MOC) genericclient.h
	$(MOC) genericclient.h -o moc_genericclient.cpp

moc_setupgui.cpp: $(MOC) setupgui.h
	$(MOC) setupgui.h -o moc_setupgui.cpp

####### Install

install:  

uninstall:  

